pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "pipeline-for-webapp:latest"
        DOCKER_REGISTRY = "your-dockerhub-username"
        S3_BUCKET = "your-s3-bucket-name"
        EC2_USER = "ec2-user"
        EC2_HOST = "your-ec2-ip"
        EC2_KEY = "C:/Jenkins/keys/my-ec2-key.pem"
    }

    stages {

        stage('Pre-Flight Checks') {
            steps {
                echo "✅ Checking Git..."
                bat 'git --version'

                echo "✅ Checking Docker..."
                bat 'docker --version'

                echo "✅ SSH ready to EC2..."
                bat 'ssh -i "%EC2_KEY%" %EC2_USER%@%EC2_HOST% exit || echo SSH warning'
            }
        }

        stage('Checkout') {
            steps {
                git url: 'https://github.com/Uswahy/Pipeline-For-WebApp.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                bat "docker build -t %DOCKER_IMAGE% ."
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image..."
                bat "docker tag %DOCKER_IMAGE% %DOCKER_REGISTRY%/%DOCKER_IMAGE%"
                bat "docker push %DOCKER_REGISTRY%/%DOCKER_IMAGE%"
            }
        }

        stage('Deploy to EC2') {
            steps {
                echo "Deploying to EC2..."
                bat """
                ssh -i "%EC2_KEY%" %EC2_USER%@%EC2_HOST% ^
                "docker pull %DOCKER_REGISTRY%/%DOCKER_IMAGE% && ^
                 docker stop webapp || true && ^
                 docker rm webapp || true && ^
                 docker run -d --name webapp -p 80:3000 %DOCKER_REGISTRY%/%DOCKER_IMAGE%"
                """
            }
        }

        stage('Backup Logs to S3') {
            steps {
                echo "Backing up logs to S3..."
                bat "aws s3 cp C:/path/to/logs s3://%S3_BUCKET%/logs --recursive"
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline finished successfully."
        }
        failure {
            echo "❌ Pipeline failed."
        }
    }
}


