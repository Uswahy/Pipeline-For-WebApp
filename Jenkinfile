pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "pipeline-for-webapp"        // Your Docker Hub repo
        EC2_HOST = "ubuntu@54.196.86.213"          // Your EC2 public IP
        S3_BUCKET = "final-webapp-logs"            // Your S3 bucket name
    }
    stages {

        stage('Pre-Flight Checks') {
            steps {
                script {
                    echo "✅ Checking Git..."
                    bat 'git --version'

                    echo "✅ Checking Docker..."
                    bat 'docker --version'
                    bat 'docker info || echo Docker info warning'

                    echo "✅ Checking SSH to EC2..."
                    sshagent(['ec2-ssh-key']) {
                        bat "ssh -o StrictHostKeyChecking=no ${EC2_HOST} \"echo SSH connection OK\""
                    }
                }
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Uswahy/Pipeline-For-WebApp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', 
                        usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        
                        bat "docker login -u %DOCKER_USER% -p %DOCKER_PASS%"
                        bat "docker push ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                        bat "docker tag ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ${DOCKER_IMAGE}:latest"
                        bat "docker push ${DOCKER_IMAGE}:latest"
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    bat """
                        ssh -o StrictHostKeyChecking=no ${EC2_HOST} ^
                        "docker pull ${DOCKER_IMAGE}:${env.BUILD_NUMBER} && ^
                        docker stop webapp || true && ^
                        docker rm webapp || true && ^
                        docker run -d --name webapp -p 80:80 ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                    """
                }
            }
        }

        stage('Backup Logs to S3') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    bat """
                        ssh -o StrictHostKeyChecking=no ${EC2_HOST} ^
                        "aws s3 sync /var/log/webapp s3://${S3_BUCKET}/%DATE:~10,4%-%DATE:~4,2%-%DATE:~7,2%_%TIME:~0,2%-%TIME:~3,2%-%TIME:~6,2%"
                    """
                }
            }
        }
    }
}



