pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "pipeline-for-webapp"       // Docker Hub repo
        EC2_HOST = "ubuntu@54.196.86.213"         // EC2 user@IP
        S3_BUCKET = "final-webapp-logs"           // S3 bucket name
    }
    stages {
        stage('Pre-Flight Checks') {
            steps {
                echo "✅ Checking Git..."
                bat 'git --version'
                echo "✅ Checking Docker..."
                bat 'docker --version'
                bat 'docker info || echo Docker info warning'
                echo "✅ SSH ready to EC2..."
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Uswahy/Pipeline-For-WebApp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        bat """
                            docker login -u %DOCKER_USER% -p %DOCKER_PASS%
                            docker tag ${DOCKER_IMAGE}:${env.BUILD_NUMBER} %DOCKER_USER%/${DOCKER_IMAGE}:${env.BUILD_NUMBER}
                            docker push %DOCKER_USER%/${DOCKER_IMAGE}:${env.BUILD_NUMBER}
                            docker tag ${DOCKER_IMAGE}:${env.BUILD_NUMBER} %DOCKER_USER%/${DOCKER_IMAGE}:latest
                            docker push %DOCKER_USER%/${DOCKER_IMAGE}:latest
                        """
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'EC2_KEY')]) {
                    script {
                        bat """
                            ssh -i %EC2_KEY% -o StrictHostKeyChecking=no ${EC2_HOST} ^
                            "docker pull %DOCKER_USER%/${DOCKER_IMAGE}:${env.BUILD_NUMBER} && ^
                            docker stop webapp || true && ^
                            docker rm webapp || true && ^
                            docker run -d --name webapp -p 80:80 %DOCKER_USER%/${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                        """
                    }
                }
            }
        }

        stage('Backup Logs to S3') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'EC2_KEY')]) {
                    script {
                        bat """
                            ssh -i %EC2_KEY% -o StrictHostKeyChecking=no ${EC2_HOST} ^
                            "for /f \\"tokens=1-4 delims=/ \\" %a in ('date /t') do set dt=%d-%b-%c_%time:~0,2%-%time:~3,2%-%time:~6,2% && ^
                            set dt=!dt: =0! && ^
                            aws s3 sync /var/log/webapp s3://${S3_BUCKET}/!dt!"
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "✅ Pipeline succeeded."
        }
        failure {
            echo "❌ Pipeline failed."
        }
    }
}

}



